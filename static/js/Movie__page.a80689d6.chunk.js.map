{"version":3,"sources":["_components/Movie/Movie.jsx"],"names":["Cast","lazy","Review","Movie","movieId","useState","movie","setMovie","history","useHistory","params","useParams","console","log","location","useLocation","genresList","genres","map","item","name","join","useEffect","getMovieById","id","then","film","img","poster_path","onClick","push","state","from","src","alt","title","to","pathname","fallback","path"],"mappings":"4MAaMA,EAAOC,gBAAK,kBAChB,gCAGIC,EAASD,gBAAK,kBAClB,gCAgEaE,UA7DD,SAAC,GAAgB,EAAdC,QAAe,IAAD,EAC7B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBACMG,GADN,UACgBC,eACVC,EAASC,cACfC,QAAQC,IAAI,wBAAeH,GAC3B,IAAMI,EAAWC,cACjBH,QAAQC,IAAI,0BAAiBC,GAE7B,IAAME,EAAU,UAAGV,EAAMW,cAAT,aAAG,EAAcC,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAAMC,KAAK,MAK/DC,qBAAU,WACRC,YAAab,EAAOc,IAAIC,MAAK,SAACC,GAAD,OAAUnB,EAASmB,QAC/C,CAAChB,IACJ,IAAMiB,EAAG,0CAAsCrB,EAAMsB,aACrD,OACE,qCACE,gCACE,wBAAQC,QAXO,WACnBrB,EAAQsB,KAAKhB,EAASiB,MAAMC,OAUxB,qBACA,qBAAKC,IAAKN,EAAKO,IAAI,KACnB,4BAAI5B,EAAM6B,QACV,4BAAInB,IAEJ,cAAC,IAAD,CACEoB,GAAI,CACFC,SAAS,UAAD,OAAY3B,EAAOc,GAAnB,SACRO,MAAO,CACLC,KAAMlB,EAASiB,MAAMC,OAJ3B,kBAUA,cAAC,IAAD,CACEI,GAAI,CACFC,SAAS,UAAD,OAAY3B,EAAOc,GAAnB,WACRO,MAAO,CACLC,KAAMlB,EAASiB,MAAMC,OAJ3B,uBAWF,cAAC,WAAD,CAAUM,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kBAAZ,SACE,cAACvC,EAAD,CAAMwB,GAAId,EAAOc,OAEnB,cAAC,IAAD,CAAOe,KAAK,oBAAZ,SACE,cAACrC,EAAD,CAAQsB,GAAId,EAAOc","file":"static/js/Movie__page.a80689d6.chunk.js","sourcesContent":["import { useEffect, useState, lazy, Suspense } from \"react\";\r\nimport {\r\n  useParams,\r\n  useLocation,\r\n  NavLink,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { getMovieById } from \"../../servises/api/api\";\r\n// import Cast from \"../Cast/Cast\";\r\n// import Review from \"../Review/Review\";\r\n\r\nconst Cast = lazy(() =>\r\n  import(\"../Cast/Cast\" /* webpackChunkName: \"Cast__page\" */)\r\n);\r\n\r\nconst Review = lazy(() =>\r\n  import(\"../Review/Review\" /* webpackChunkName: \"Review__page\" */)\r\n);\r\n\r\nconst Movie = ({ movieId }) => {\r\n  const [movie, setMovie] = useState({});\r\n  const [genres, setGenres] = useState([]);\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  console.log(\"✈️ ~ params\", params);\r\n  const location = useLocation();\r\n  console.log(\"✈️ ~ location\", location);\r\n\r\n  const genresList = movie.genres?.map((item) => item.name).join(\", \");\r\n  const hendleGoBack = () => {\r\n    history.push(location.state.from);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieById(params.id).then((film) => setMovie(film));\r\n  }, [params]);\r\n  const img = `https://image.tmdb.org/t/p/w300/${movie.poster_path}`;\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={hendleGoBack}>Go back</button>\r\n        <img src={img} alt=\"\" />\r\n        <p>{movie.title}</p>\r\n        <p>{genresList}</p>\r\n        {/* <NavLink to={`/movie/${params.id}/cast`}>Cast</NavLink> */}\r\n        <NavLink\r\n          to={{\r\n            pathname: `/movie/${params.id}/cast`,\r\n            state: {\r\n              from: location.state.from,\r\n            },\r\n          }}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          to={{\r\n            pathname: `/movie/${params.id}/review`,\r\n            state: {\r\n              from: location.state.from,\r\n            },\r\n          }}\r\n        >\r\n          Review\r\n        </NavLink>\r\n      </div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Switch>\r\n          <Route path=\"/movie/:id/cast\">\r\n            <Cast id={params.id} />\r\n          </Route>\r\n          <Route path=\"/movie/:id/review\">\r\n            <Review id={params.id} />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"],"sourceRoot":""}