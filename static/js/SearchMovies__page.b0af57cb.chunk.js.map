{"version":3,"sources":["_components/Input/Input.jsx","servises/localStorage/localStorage.js","_components/SearchingItem/SearchingItem.jsx","_components/SearchMovies/SearchMovies.jsx"],"names":["STORAGE_KEY","Input","getValue","useState","value","setValue","location","useLocation","console","log","useEffect","localStorage","getItem","key","JSON","parse","error","get","onSubmit","e","preventDefault","type","onChange","target","setItem","stringify","save","SearchingItem","searchingQuery","films","setFilms","getSearchMovies","then","res","results","map","film","img","poster_path","to","pathname","id","state","from","src","alt","width","title","SearchMovies","query","setQuery"],"mappings":"0NAKMA,EAAc,iBAiCLC,EA/BD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAEjBC,QAAQC,IAAI,MAAOH,GAiBnB,OALAI,qBAAU,WAC8B,KAAtCC,aAAaC,QAAQZ,IAAuBK,EChBpC,SAACQ,GACX,IACE,OAAOC,KAAKC,MAAMJ,aAAaC,QAAQC,IACvC,MAAOG,GACP,OAAO,MDY8CC,CAAIjB,IACzDE,EAASE,KACR,CAACA,IAGF,sBAAMc,SAXS,SAACC,GAChBA,EAAEC,iBACFlB,EAASE,IAST,SACE,kCACE,uBAAOiB,KAAK,OAAOjB,MAAOA,EAAOkB,SAnBjB,SAACH,GACrBA,EAAEC,iBACFf,EAASc,EAAEI,OAAOnB,OCdT,SAACS,EAAKT,GACjB,IACEO,aAAaa,QAAQX,EAAKC,KAAKW,UAAUrB,IACzC,MAAOY,GACP,OAAO,MDWPU,CAAK1B,EAAamB,EAAEI,OAAOnB,UAiBvB,wBAAQiB,KAAK,SAAb,yB,eEIOM,EAhCO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACvB,EAA0BzB,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcC,EAAd,KACMxB,EAAWC,cAUjB,OATAC,QAAQC,IAAI,kCAAyBH,GAErCI,qBAAU,WACHkB,GACLG,YAAgBH,GAAgBI,MAAK,SAACC,GACpCH,EAASG,EAAIC,cAEd,CAACN,IAEGC,EAAMM,KAAI,SAACC,GAChB,IAAMC,EAAG,0CAAsCD,EAAKE,aACpD,OACE,6BACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYJ,EAAKK,IACzBC,MAAO,CACLC,KAAMrC,IAJZ,UAQE,qBAAKsC,IAAKP,EAAKQ,IAAI,GAAGC,MAAM,QAC5B,4BAAIV,EAAKW,YAVJX,EAAKK,QCKLO,UAjBM,WACnB,MAA0B7C,mBAAS,IAAnC,mBAAO8C,EAAP,KAAcC,EAAd,KAMA,OACE,qCACE,cAAC,EAAD,CAAOhD,SAAUgD,IACjB,6BACE,cAAC,EAAD,CAAetB,eAAgBqB","file":"static/js/SearchMovies__page.b0af57cb.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport s from \"./Input.scss\";\r\nimport { save, get } from \"../../servises/localStorage/localStorage\";\r\n\r\nconst STORAGE_KEY = \"searchingQuery\";\r\n\r\nconst Input = ({ getValue }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  console.log(\"AAA\", location);\r\n  const heandleChange = (e) => {\r\n    e.preventDefault();\r\n    setValue(e.target.value);\r\n    save(STORAGE_KEY, e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.getItem(STORAGE_KEY) !== \"\" && setValue(get(STORAGE_KEY));\r\n    getValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>\r\n        <input type=\"text\" value={value} onChange={heandleChange} />\r\n        <button type=\"submit\">Serch</button>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { getSearchMovies } from \"../../servises/api/api\";\r\n\r\nconst SearchingItem = ({ searchingQuery }) => {\r\n  const [films, setFilms] = useState([]);\r\n  const location = useLocation();\r\n  console.log(\"✈️ ~ location!!!!!!!!\", location);\r\n\r\n  useEffect(() => {\r\n    if (!searchingQuery) return;\r\n    getSearchMovies(searchingQuery).then((res) => {\r\n      setFilms(res.results);\r\n    });\r\n  }, [searchingQuery]);\r\n\r\n  return films.map((film) => {\r\n    const img = `https://image.tmdb.org/t/p/w300/${film.poster_path}`;\r\n    return (\r\n      <li key={film.id}>\r\n        <Link\r\n          to={{\r\n            pathname: `/movie/${film.id}`,\r\n            state: {\r\n              from: location,\r\n            },\r\n          }}\r\n        >\r\n          <img src={img} alt=\"\" width=\"100\" />\r\n          <p>{film.title}</p>\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport default SearchingItem;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Input from \"../Input/Input\";\r\nimport SearchingItem from \"../SearchingItem/SearchingItem\";\r\n\r\n// const heandleChange = (e) => {};\r\n\r\nconst SearchMovies = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  //   const handleSubmit = (e) => {\r\n  //     setQuery;\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <Input getValue={setQuery} />\r\n      <ul>\r\n        <SearchingItem searchingQuery={query} />\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchMovies;\r\n"],"sourceRoot":""}